'use strict';

var fs = require('fs');
var path = require('path');
var through = require('through2');
var PluginError = require('plugin-error');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var through__default = /*#__PURE__*/_interopDefaultLegacy(through);
var PluginError__default = /*#__PURE__*/_interopDefaultLegacy(PluginError);

const PLUGIN_NAME = 'gulp-source-injector';

const inject = () => {
  return through__default['default'].obj((file, _, callback) => {
    if (file.isNull()) {
      return callback(null, file)
    }

    if (file.isStream()) {
      return callback(new PluginError__default['default'](PLUGIN_NAME, 'Streaming not supported'))
    }

    const regex = /(?:<!--|\/\*)\s*?inject:\s*?([^\s].+?)\s*?(?:-->|\*\/)/gi;

    const newFileContents = String(file.contents).replace(regex, (_, src) => {
      const sourcePath = src.startsWith('/')
        ? path__default['default'].join(process.cwd(), src)
        : path__default['default'].join(file.dirname, src);
      return String(fs__default['default'].readFileSync(sourcePath))
    });

    file.contents = Buffer.from(newFileContents);
    callback(null, file);
  })
};

var src = inject;

module.exports = src;
